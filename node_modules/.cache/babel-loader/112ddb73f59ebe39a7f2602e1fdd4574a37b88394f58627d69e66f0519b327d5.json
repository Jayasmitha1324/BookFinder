{"ast":null,"code":"// src/api/openLibrary.js\nconst BASE = 'https://openlibrary.org';\n\n/**\n * Search OpenLibrary\n * @param {{q: string, author?: string, year?: string, language?: string, page?: number, limit?: number}} options\n * @returns {Promise<{docs: Array, numFound: number}>}\n */\nexport async function searchBooks({\n  q,\n  author,\n  year,\n  language,\n  page = 1,\n  limit = 12\n}) {\n  // Prevent empty search\n  if (!q || !q.trim()) return {\n    docs: [],\n    numFound: 0\n  };\n  const params = new URLSearchParams();\n\n  // Basic search query\n  params.set('q', q.trim());\n\n  // Optional filters\n  if (author) params.set('author', author.trim());\n  if (year) params.set('first_publish_year', year.trim());\n  if (language) params.set('language', language.toLowerCase());\n\n  // Pagination: OpenLibrary uses 'page' and 'limit' is not always present but we can set 'limit' as 'limit' param\n  params.set('page', String(page));\n  params.set('limit', String(limit));\n  const url = `${BASE}/search.json?${params.toString()}`;\n\n  // Simple timeout wrapper for fetch\n  const controller = new AbortController();\n  const timeout = setTimeout(() => controller.abort(), 15000); // 15s timeout\n\n  try {\n    var _data$num_found;\n    const res = await fetch(url, {\n      signal: controller.signal\n    });\n    clearTimeout(timeout);\n    if (!res.ok) {\n      // Return empty result but keep caller aware numFound=0\n      return {\n        docs: [],\n        numFound: 0\n      };\n    }\n    const data = await res.json();\n\n    // Normalize docs: ensure an array exists\n    const docs = Array.isArray(data.docs) ? data.docs : [];\n    return {\n      docs,\n      numFound: typeof data.numFound === 'number' ? data.numFound : (_data$num_found = data.num_found) !== null && _data$num_found !== void 0 ? _data$num_found : 0\n    };\n  } catch (err) {\n    // On timeout / fetch error, return empty results so UI can handle gracefully\n    // console.error('OpenLibrary search failed', err);\n    return {\n      docs: [],\n      numFound: 0\n    };\n  }\n}\n\n// Cover image helper\nexport function coverUrl(id, size = 'M') {\n  if (!id) return null;\n  return `https://covers.openlibrary.org/b/id/${id}-${size}.jpg`;\n}\n\n// Book page link helper\nexport function openLibraryUrl(key) {\n  if (!key) return BASE;\n  return `${BASE}${key}`;\n}\nexport default searchBooks;","map":{"version":3,"names":["BASE","searchBooks","q","author","year","language","page","limit","trim","docs","numFound","params","URLSearchParams","set","toLowerCase","String","url","toString","controller","AbortController","timeout","setTimeout","abort","_data$num_found","res","fetch","signal","clearTimeout","ok","data","json","Array","isArray","num_found","err","coverUrl","id","size","openLibraryUrl","key"],"sources":["C:/Users/admin/Desktop/Book_Finder/book-finder-final/book-finder/src/api/openLibrary.js"],"sourcesContent":["// src/api/openLibrary.js\nconst BASE = 'https://openlibrary.org';\n\n/**\n * Search OpenLibrary\n * @param {{q: string, author?: string, year?: string, language?: string, page?: number, limit?: number}} options\n * @returns {Promise<{docs: Array, numFound: number}>}\n */\nexport async function searchBooks({ q, author, year, language, page = 1, limit = 12 }) {\n  // Prevent empty search\n  if (!q || !q.trim()) return { docs: [], numFound: 0 };\n\n  const params = new URLSearchParams();\n\n  // Basic search query\n  params.set('q', q.trim());\n\n  // Optional filters\n  if (author) params.set('author', author.trim());\n  if (year) params.set('first_publish_year', year.trim());\n  if (language) params.set('language', language.toLowerCase());\n\n  // Pagination: OpenLibrary uses 'page' and 'limit' is not always present but we can set 'limit' as 'limit' param\n  params.set('page', String(page));\n  params.set('limit', String(limit));\n\n  const url = `${BASE}/search.json?${params.toString()}`;\n\n  // Simple timeout wrapper for fetch\n  const controller = new AbortController();\n  const timeout = setTimeout(() => controller.abort(), 15000); // 15s timeout\n\n  try {\n    const res = await fetch(url, { signal: controller.signal });\n    clearTimeout(timeout);\n\n    if (!res.ok) {\n      // Return empty result but keep caller aware numFound=0\n      return { docs: [], numFound: 0 };\n    }\n\n    const data = await res.json();\n\n    // Normalize docs: ensure an array exists\n    const docs = Array.isArray(data.docs) ? data.docs : [];\n\n    return {\n      docs,\n      numFound: typeof data.numFound === 'number' ? data.numFound : (data.num_found ?? 0)\n    };\n  } catch (err) {\n    // On timeout / fetch error, return empty results so UI can handle gracefully\n    // console.error('OpenLibrary search failed', err);\n    return { docs: [], numFound: 0 };\n  }\n}\n\n// Cover image helper\nexport function coverUrl(id, size = 'M') {\n  if (!id) return null;\n  return `https://covers.openlibrary.org/b/id/${id}-${size}.jpg`;\n}\n\n// Book page link helper\nexport function openLibraryUrl(key) {\n  if (!key) return BASE;\n  return `${BASE}${key}`;\n}\n\nexport default searchBooks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}