{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Book_Finder\\\\book-finder-final\\\\book-finder\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport BookCard from '../components/BookCard';\nimport BookDetailsModal from '../components/BookDetailsModal';\nimport { searchBooks } from '../api/openLibrary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [filters, setFilters] = useState({\n    author: '',\n    year: '',\n    language: ''\n  });\n  const [results, setResults] = useState([]);\n  const [numFound, setNumFound] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [selected, setSelected] = useState(null);\n  const [noResults, setNoResults] = useState(false);\n\n  // page size used consistently across UI + API\n  const PAGE_SIZE = 12;\n\n  // Keep a ref to the last successful results so we can preserve UI when a next-page call transiently fails\n  const lastGoodResults = useRef({\n    results: [],\n    numFound: 0,\n    page: 1\n  });\n\n  // Reset page when query or filters change (but DO NOT trigger a search automatically)\n  useEffect(() => {\n    setPage(1);\n  }, [query, filters]);\n  async function doSearch(qParam, filtersParam, requestedPage = 1) {\n    const currentQuery = qParam !== null && qParam !== void 0 ? qParam : query;\n    const currentFilters = filtersParam !== null && filtersParam !== void 0 ? filtersParam : filters;\n    const safeQuery = typeof currentQuery === 'string' ? currentQuery.trim() : '';\n    if (!safeQuery) {\n      setError('⚠️ Please enter a search term.');\n      setResults([]);\n      setNoResults(false);\n      return;\n    }\n    setError('');\n    setNoResults(false);\n    setLoading(true);\n    try {\n      var _currentFilters$autho, _currentFilters$year;\n      // Call the API with the consistent PAGE_SIZE\n      const data = await searchBooks({\n        q: safeQuery,\n        author: ((_currentFilters$autho = currentFilters.author) === null || _currentFilters$autho === void 0 ? void 0 : _currentFilters$autho.trim()) || '',\n        year: ((_currentFilters$year = currentFilters.year) === null || _currentFilters$year === void 0 ? void 0 : _currentFilters$year.trim()) || '',\n        language: currentFilters.language || '',\n        page: requestedPage,\n        limit: PAGE_SIZE\n      });\n\n      // If API returned an error field or empty results but numFound is 0 => real no results\n      if (data.error) {\n        // Keep previous results visible (don't clear them) unless this was the first search\n        if (lastGoodResults.current.results.length === 0 || requestedPage === 1) {\n          setResults([]);\n        }\n        setError('❌ Failed to fetch data (transient). Please retry.');\n        setLoading(false);\n        return;\n      }\n      let docs = Array.isArray(data.docs) ? data.docs : [];\n\n      // Client-side language safety: be lenient.\n      if (currentFilters.language) {\n        const selectedLang = currentFilters.language.toLowerCase();\n        docs = docs.filter(book => {\n          // If book lists languages, require match; if it doesn't, keep it (less aggressive).\n          if (Array.isArray(book.language) && book.language.length > 0) {\n            return book.language.some(lang => String(lang).toLowerCase().includes(selectedLang));\n          }\n          // fallback: sometimes API includes `languages` (objects) or none; keep the book if no explicit language\n          if (Array.isArray(book.languages) && book.languages.length > 0) {\n            // book.languages might be objects like { key: \"/languages/eng\" }\n            return book.languages.some(L => {\n              const s = typeof L === 'string' ? L : L && L.key || '';\n              return String(s).toLowerCase().includes(selectedLang);\n            });\n          }\n          // No declared language: keep it (prevents false negatives)\n          return true;\n        });\n      }\n\n      // Update UI with new docs (even if docs is empty but numFound==0)\n      setResults(docs);\n      setNumFound(data.numFound || 0);\n      setPage(requestedPage);\n      setError('');\n\n      // Save to lastGoodResults only if we have docs (so we don't overwrite good results with empty results)\n      if (docs.length > 0) {\n        lastGoodResults.current = {\n          results: docs,\n          numFound: data.numFound || 0,\n          page: requestedPage\n        };\n      }\n      if (docs.length === 0) {\n        if ((data.numFound || 0) > 0) {\n          // No docs on this page but API says items exist => transient (should be rare since API wrapper retries)\n          setError('🌍 No books returned on this page, but results exist. Try retrying the same page.');\n        } else {\n          // Truly no results\n          setNoResults(true);\n        }\n      } else {\n        setNoResults(false);\n      }\n    } catch (e) {\n      console.error('Search error:', e);\n      // preserve existing results if any, show friendly error\n      if (lastGoodResults.current.results.length > 0) {\n        setError('❌ Temporary network error. Showing last results. Retry to fetch fresh data.');\n        setResults(lastGoodResults.current.results);\n        setNumFound(lastGoodResults.current.numFound);\n        setPage(lastGoodResults.current.page);\n      } else {\n        setError('❌ Failed to fetch data. Please check your connection and try again.');\n        setResults([]);\n        setNumFound(0);\n        setPage(1);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Determine total pages based on PAGE_SIZE\n  const totalPages = Math.max(1, Math.ceil(numFound / PAGE_SIZE));\n  const isLastPage = page >= totalPages;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      onQueryChange: setQuery,\n      filters: filters,\n      onFiltersChange: setFilters,\n      onSearch: () => doSearch(query, filters, 1),\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notice error\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn small retry\",\n        onClick: () => doSearch(query, filters, page),\n        disabled: loading,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notice\",\n      children: \"\\uD83D\\uDD0E Searching books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }, this), noResults && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notice\",\n      children: \"\\uD83D\\uDCED No results found for this search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), !loading && results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: results.map(b => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: b,\n        onOpen: () => setSelected(b)\n      }, `${b.key}_${b.cover_i || ''}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), numFound > 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => doSearch(query, filters, Math.max(1, page - 1)),\n        disabled: loading || page <= 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", page, \" / \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (!isLastPage) doSearch(query, filters, page + 1);\n        },\n        disabled: loading || isLastPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), selected && /*#__PURE__*/_jsxDEV(BookDetailsModal, {\n      book: selected,\n      onClose: () => setSelected(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"aB0RXZ8++L7AFjolUUvwYUUJv24=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","SearchBar","BookCard","BookDetailsModal","searchBooks","jsxDEV","_jsxDEV","Home","_s","query","setQuery","filters","setFilters","author","year","language","results","setResults","numFound","setNumFound","loading","setLoading","error","setError","page","setPage","selected","setSelected","noResults","setNoResults","PAGE_SIZE","lastGoodResults","doSearch","qParam","filtersParam","requestedPage","currentQuery","currentFilters","safeQuery","trim","_currentFilters$autho","_currentFilters$year","data","q","limit","current","length","docs","Array","isArray","selectedLang","toLowerCase","filter","book","some","lang","String","includes","languages","L","s","key","e","console","totalPages","Math","max","ceil","isLastPage","children","onQueryChange","onFiltersChange","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","map","b","onOpen","cover_i","onClose","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Book_Finder/book-finder-final/book-finder/src/pages/Home.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport BookCard from '../components/BookCard';\nimport BookDetailsModal from '../components/BookDetailsModal';\nimport { searchBooks } from '../api/openLibrary';\n\nexport default function Home() {\n  const [query, setQuery] = useState('');\n  const [filters, setFilters] = useState({ author: '', year: '', language: '' });\n  const [results, setResults] = useState([]);\n  const [numFound, setNumFound] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [selected, setSelected] = useState(null);\n  const [noResults, setNoResults] = useState(false);\n\n  // page size used consistently across UI + API\n  const PAGE_SIZE = 12;\n\n  // Keep a ref to the last successful results so we can preserve UI when a next-page call transiently fails\n  const lastGoodResults = useRef({ results: [], numFound: 0, page: 1 });\n\n  // Reset page when query or filters change (but DO NOT trigger a search automatically)\n  useEffect(() => {\n    setPage(1);\n  }, [query, filters]);\n\n  async function doSearch(qParam, filtersParam, requestedPage = 1) {\n    const currentQuery = qParam ?? query;\n    const currentFilters = filtersParam ?? filters;\n    const safeQuery = typeof currentQuery === 'string' ? currentQuery.trim() : '';\n\n    if (!safeQuery) {\n      setError('⚠️ Please enter a search term.');\n      setResults([]);\n      setNoResults(false);\n      return;\n    }\n\n    setError('');\n    setNoResults(false);\n    setLoading(true);\n\n    try {\n      // Call the API with the consistent PAGE_SIZE\n      const data = await searchBooks({\n        q: safeQuery,\n        author: currentFilters.author?.trim() || '',\n        year: currentFilters.year?.trim() || '',\n        language: currentFilters.language || '',\n        page: requestedPage,\n        limit: PAGE_SIZE,\n      });\n\n      // If API returned an error field or empty results but numFound is 0 => real no results\n      if (data.error) {\n        // Keep previous results visible (don't clear them) unless this was the first search\n        if (lastGoodResults.current.results.length === 0 || requestedPage === 1) {\n          setResults([]);\n        }\n        setError('❌ Failed to fetch data (transient). Please retry.');\n        setLoading(false);\n        return;\n      }\n\n      let docs = Array.isArray(data.docs) ? data.docs : [];\n\n      // Client-side language safety: be lenient.\n      if (currentFilters.language) {\n        const selectedLang = currentFilters.language.toLowerCase();\n        docs = docs.filter((book) => {\n          // If book lists languages, require match; if it doesn't, keep it (less aggressive).\n          if (Array.isArray(book.language) && book.language.length > 0) {\n            return book.language.some((lang) =>\n              String(lang).toLowerCase().includes(selectedLang)\n            );\n          }\n          // fallback: sometimes API includes `languages` (objects) or none; keep the book if no explicit language\n          if (Array.isArray(book.languages) && book.languages.length > 0) {\n            // book.languages might be objects like { key: \"/languages/eng\" }\n            return book.languages.some((L) => {\n              const s = typeof L === 'string' ? L : (L && L.key) || '';\n              return String(s).toLowerCase().includes(selectedLang);\n            });\n          }\n          // No declared language: keep it (prevents false negatives)\n          return true;\n        });\n      }\n\n      // Update UI with new docs (even if docs is empty but numFound==0)\n      setResults(docs);\n      setNumFound(data.numFound || 0);\n      setPage(requestedPage);\n      setError('');\n\n      // Save to lastGoodResults only if we have docs (so we don't overwrite good results with empty results)\n      if (docs.length > 0) {\n        lastGoodResults.current = { results: docs, numFound: data.numFound || 0, page: requestedPage };\n      }\n\n      if (docs.length === 0) {\n        if ((data.numFound || 0) > 0) {\n          // No docs on this page but API says items exist => transient (should be rare since API wrapper retries)\n          setError('🌍 No books returned on this page, but results exist. Try retrying the same page.');\n        } else {\n          // Truly no results\n          setNoResults(true);\n        }\n      } else {\n        setNoResults(false);\n      }\n    } catch (e) {\n      console.error('Search error:', e);\n      // preserve existing results if any, show friendly error\n      if (lastGoodResults.current.results.length > 0) {\n        setError('❌ Temporary network error. Showing last results. Retry to fetch fresh data.');\n        setResults(lastGoodResults.current.results);\n        setNumFound(lastGoodResults.current.numFound);\n        setPage(lastGoodResults.current.page);\n      } else {\n        setError('❌ Failed to fetch data. Please check your connection and try again.');\n        setResults([]);\n        setNumFound(0);\n        setPage(1);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Determine total pages based on PAGE_SIZE\n  const totalPages = Math.max(1, Math.ceil(numFound / PAGE_SIZE));\n  const isLastPage = page >= totalPages;\n\n  return (\n    <div>\n      <SearchBar\n        query={query}\n        onQueryChange={setQuery}\n        filters={filters}\n        onFiltersChange={setFilters}\n        onSearch={() => doSearch(query, filters, 1)}\n        loading={loading}\n      />\n\n      {/* Error + Retry (retry the same page) */}\n      {error && (\n        <div className=\"notice error\">\n          {error}\n          <button\n            className=\"btn small retry\"\n            onClick={() => doSearch(query, filters, page)}\n            disabled={loading}\n          >\n            Retry\n          </button>\n        </div>\n      )}\n\n      {/* Loading */}\n      {loading && <div className=\"notice\">🔎 Searching books...</div>}\n\n      {/* No Results */}\n      {noResults && !loading && !error && (\n        <div className=\"notice\">📭 No results found for this search.</div>\n      )}\n\n      {/* Results */}\n      {!loading && results.length > 0 && (\n        <div className=\"grid\">\n          {results.map((b) => (\n            <BookCard\n              key={`${b.key}_${b.cover_i || ''}`}\n              book={b}\n              onOpen={() => setSelected(b)}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Pagination */}\n      {numFound > 0 && !loading && (\n        <div className=\"pagination\">\n          <button\n            onClick={() => doSearch(query, filters, Math.max(1, page - 1))}\n            disabled={loading || page <= 1}\n          >\n            Prev\n          </button>\n\n          <span>\n            Page {page} / {totalPages}\n          </span>\n\n          <button\n            onClick={() => {\n              if (!isLastPage) doSearch(query, filters, page + 1);\n            }}\n            disabled={loading || isLastPage}\n          >\n            Next\n          </button>\n        </div>\n      )}\n\n      {/* Modal */}\n      {selected && <BookDetailsModal book={selected} onClose={() => setSelected(null)} />}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}